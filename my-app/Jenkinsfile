pipeline {
    agent any

    environment {
        OPENSHIFT_PROJECT = 'indraandriansyah-dev'
        APP_NAME = 'my-nextjs-app'
        TOKEN_CREDS_ID = '5e05a171-1bbd-456e-9ac5-61bf0c4e1e5d'
        GITHUB_REPO = 'https://github.com/IndraAndriansyah/learning-deployment-using-jenkins-in-server.git'
        OPENSHIFT_YAML = 'my-app/deployment-service-hpa.yaml'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Checkout Code github') {
            steps {
                git url: "${GITHUB_REPO}"
            }
        }

        stage('Deploy to OpenShift') {
            steps {
                script {
                    withCredentials([string(credentialsId: TOKEN_CREDS_ID, variable: 'OC_TOKEN')]) {
                        sh '''
                            oc login --token=$OC_TOKEN --server=https://api.rm1.0a51.p1.openshiftapps.com:6443
                        '''
                    }

                    sh "oc project ${OPENSHIFT_PROJECT}"

                    // Build & start
                    sh '''
                        oc new-build --name=${APP_NAME} --binary --strategy=docker || echo "Build already exists"
                        oc start-build ${APP_NAME} --from-dir=. --follow
                    '''

                    // Ambil image URL dari image stream
                    def imageUrl = sh(
                        script: "oc get is ${APP_NAME} -o jsonpath='{.status.dockerImageRepository}'",
                        returnStdout: true
                    ).trim()

                    echo "✅ Image URL: ${imageUrl}"

                    // Patch file YAML
                    def yamlContent = readFile("${OPENSHIFT_YAML}")
                    def patchedYaml = yamlContent.replaceAll("image: .*", "image: ${imageUrl}:latest")

                    writeFile file: 'my-app/deployment-service-hpa-patched.yaml', text: patchedYaml

                    // Apply YAML yang sudah di-patch
                    sh "oc apply -f my-app/deployment-service-hpa-patched.yaml"
                }
            }
        }
    }

    post {
        success {
            echo '✅ Build and deploy succeeded!'
        }
        failure {
            echo '❌ Build or deploy failed.'
        }
    }
}
